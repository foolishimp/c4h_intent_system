# config/system_config.yml

# LLM Provider Configuration
default_llm: openai
providers:
  openai:
    model: gpt-4
    api_key_env: OPENAI_API_KEY
    timeout: 120
    temperature: 0
    additional_params:
      max_tokens: 4096
  
  anthropic:
    model: claude-3-opus-20240229
    api_key_env: ANTHROPIC_API_KEY
    timeout: 120
    temperature: 0
    additional_params:
      max_tokens: 4096
  
  gemini:
    model: gemini-pro
    api_key_env: GEMINI_API_KEY
    timeout: 120
    temperature: 0
    additional_params:
      max_tokens: 4096

# Intent System Configuration
intents:
  initial:
    project_discovery:
      description_template: "Discover project structure and scope for {project_path}"
      resolution: decompose
      required_skills: 
        - tartxt
      criteria:
        include_file_analysis: true
        generate_action_plan: true
      environment:
        analysis_depth: full
        include_hidden: false
      validation_rules:
        project_path: must_exist
      actions:
        - analyze_structure
        - analyze_dependencies
        - generate_report

  actions:
    analyze_structure:
      description_template: "Analyze code structure for {project_path}"
      resolution: skill
      skill: tartxt
      criteria:
        parse_imports: true
        analyze_dependencies: true
      environment:
        exclude_patterns: 
          - "*.pyc"
          - "__pycache__"
          - "*.DS_Store"
        max_file_size: 10485760  # 10MB

    analyze_dependencies:
      description_template: "Analyze project dependencies in {project_path}"
      resolution: skill
      skill: dependency_analyzer
      criteria:
        check_versions: true
        validate_imports: true
      environment:
        scan_depth: full
        include_dev_deps: true

    generate_report:
      description_template: "Generate analysis report for {project_path}"
      resolution: skill
      skill: report_generator
      criteria:
        include_metrics: true
        format_output: true
      environment:
        output_format: markdown
        include_visualizations: true

# Master Prompt Configuration
master_prompt_overlay: |
  You are part of an intent-based processing system. Your responses should be:
  1. Focused on the specific intent being processed
  2. Deterministic where possible
  3. Clear about uncertainty when it exists
  4. Tracking all transformations and decisions
  Always maintain the context and lineage of the intent being processed.

# Asset Management
asset_base_path: ./data/assets

# Agent Configuration
agents:
  orchestration_agent:
    name: OrchestrationAgent
    type: orchestrator
    description: "Coordinates intent processing and skill execution"
    base_prompt: |
      You are an orchestration agent responsible for:
      1. Analyzing intents and determining required skills
      2. Coordinating processing flows
      3. Managing intent transformations
      4. Handling errors and creating debug intents
    providers:
      - openai
      - anthropic
    llm_config:
      seed: 42
      primary_provider: openai
      fallback_providers: 
        - anthropic
      temperature: 0
      request_timeout: 120

  assurance_agent:
    name: AssuranceAgent 
    type: assurance
    description: "Verifies execution and validates results"
    base_prompt: |
      You are an assurance agent responsible for:
      1. Verifying skill execution results
      2. Validating transformations
      3. Ensuring quality of outputs
      4. Creating verification intents
    providers:
      - openai
    llm_config:
      seed: 42
      primary_provider: openai
      temperature: 0
      request_timeout: 120

# Skill Configuration
skills:
  tartxt:
    type: project_analyzer
    path: src/skills/tartxt.py
    config:
      max_file_size: 10485760
      default_excludes: 
        - "*.pyc"
        - "__pycache__"
        - "*.DS_Store"
      output_format: structured

  dependency_analyzer:
    type: code_analyzer
    path: src/skills/dependency_analyzer.py
    config:
      scan_depth: full
      include_dev: true
      check_versions: true

  report_generator:
    type: document_generator
    path: src/skills/report_generator.py
    config:
      template_path: templates/report
      output_format: markdown
      include_metrics: true

# Validation Rules
validation:
  must_exist:
    type: file_check
    validator: path_exists
  
  must_be_positive_int:
    type: value_check
    validator: is_positive_integer

  must_be_valid_rules:
    type: schema_check
    validator: validate_rule_schema
    schema_path: schemas/rules.json